(()=>{"use strict";function e(e,t=r.boardSize){return 0===e?"top-left":e===t-1?"top-right":(e+1)%t**2==0?"bottom-right":(e+t)%t**2==0?"bottom-left":e/t<1?"top":e%t==0?"left":(e+1)%t==0?"right":(e+t)/t**2>=1?"bottom":"center"}function t(e,t){let a,s,i=e.length;if(t>i)throw new Error("Количество разных случайных значений не может превышать количества всех элементов в массиве");for(;i;)s=Math.floor(Math.random()*i--),a=e[i],e[i]=e[s],e[s]=a;return e.slice(0,t)}function a(e,t=r.boardSize){return Array(t).fill(e).map((([e,a],s)=>[e+s*t,a+s*t])).flat()}function s(e,t,a=r.boardSize){return Math.max(Math.abs(e%a-t%a),Math.abs(Math.floor(e/a)-Math.floor(t/a)))}function i(e,t,a,i=[],n=r.boardSize){const o=[];for(let r=0;r<n**2;r+=1)!i.includes(r)&&a>=s(e,r)&&o.push({field:r,distance:s(r,t)});const l=o.map((e=>e.distance)),c=Math.min(...l),h=o.filter((e=>e.distance===c));return h[Math.floor(Math.random()*h.length)].field}class r{static boardSize=8;constructor(){this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(t){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(t);for(let t=0;t<r.boardSize**2;t+=1){const a=document.createElement("div");a.classList.add("cell","map-tile",`map-tile-${e(t,this.boardSize)}`),a.addEventListener("mouseenter",(e=>this.onCellEnter(e))),a.addEventListener("mouseleave",(e=>this.onCellLeave(e))),a.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(a)}this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const a of e){const e=this.boardEl.children[a.position],s=document.createElement("div");s.classList.add("character",a.character.type);const i=document.createElement("div");i.classList.add("health-level");const r=document.createElement("div");r.classList.add("health-level-indicator","health-level-indicator-"+((t=a.character.health)<15?"critical":t<50?"normal":"high")),r.style.width=`${a.character.health}%`,i.appendChild(r),s.appendChild(i),e.appendChild(s)}var t}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(e){e.preventDefault(),this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach((e=>e.call(null)))}static showError(e){alert(e)}static showMessage(e){alert(e)}selectCell(e,t="yellow"){this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}deselectAllCells(){for(let e=0;e<r.boardSize**2;e+=1)this.deselectCell(e)}selectOpponentCell(e){this.cells[e].classList.add("active-opponent")}deselectOpponentCell(e){this.cells[e].classList.remove("active-opponent")}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((a=>{const s=this.cells[e],i=document.createElement("span");i.textContent=t,i.classList.add("damage"),s.appendChild(i),i.addEventListener("animationend",(()=>{s.removeChild(i),a()}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}}const n={prairie:"prairie",desert:"desert",arctic:"arctic",mountain:"mountain",setTheme(e){switch(e%4){case 1:default:return this.prairie;case 2:return this.desert;case 3:return this.arctic;case 0:return this.mountain}}};class o{constructor(...e){this.members=new Set([...e])}add(e){if(this.members.has(e))throw new Error("Нельзя повторно добавить персонаж в команду!");this.members.add(e)}addAll(...e){this.members=new Set([...this.members,...e])}get characters(){return Array.from(this.members)}}class l{constructor(e,t="generic",a=0,s=0,i=0,r=0,n=50,o=!1){if(this.type=t,this.attack=a,this.defence=s,this.move=i,this.attackDistance=r,this.health=n,o)this.level=e;else{this.level=1;for(let t=1;t<e;t+=1)this.levelUp()}if("Character"===new.target.name)throw new Error("Запрещено создавать персонажи от класса-родителя")}levelUp(){this.level+=1,this.attack=Math.floor(Math.max(this.attack,this.attack*(80+this.health)/100)),this.health+=80,this.health>100&&(this.health=100)}}class c extends l{constructor(e,t="bowman",a=25,s=25,i=2,r=2,n=50,o=!1){super(e,t,a,s,i,r,n,o)}}class h extends l{constructor(e,t="daemon",a=10,s=10,i=1,r=4,n=50,o=!1){super(e,t,a,s,i,r,n,o)}}class m extends l{constructor(e,t="magician",a=10,s=40,i=1,r=4,n=50,o=!1){super(e,t,a,s,i,r,n,o)}}class d extends l{constructor(e,t="swordsman",a=40,s=10,i=4,r=1,n=50,o=!1){super(e,t,a,s,i,r,n,o)}}class p extends l{constructor(e,t="undead",a=40,s=10,i=4,r=1,n=50,o=!1){super(e,t,a,s,i,r,n,o)}}class u extends l{constructor(e,t="vampire",a=25,s=25,i=2,r=2,n=50,o=!1){super(e,t,a,s,i,r,n,o)}}class g{constructor(e,t){if(!(e instanceof l))throw new Error("character must be instance of Character or its children");if("number"!=typeof t)throw new Error("position must be a number");this.character=e,this.position=t}}function v(e,t,a){const s=function*(e,t){for(;;){const a=Math.floor(Math.random()*t+1),s=Math.floor(Math.random()*e.length);yield new e[s](a)}}(e,t),i=[];for(let e=0;e<a;e+=1)i.push(s.next().value);return new o(...i)}function C(e){const t=[];return e.forEach((e=>{const a=function({character:e,position:t}){return new g(function({level:e,type:t,attack:a,defence:s,move:i,attackDistance:r,health:n}){return new(function(e){switch(e){case"bowman":return c;case"daemon":return h;case"magician":return m;case"swordsman":return d;case"undead":return p;case"vampire":return u;default:return l}}(t))(e,t,a,s,i,r,n,!0)}(e),t)}(e);t.push(a)})),t}class f{static players=["player","evil"];constructor(e=1,t=0,a=[],s=[],i=null){this.gameLevel=e,this.turn=t,this.positionedPlayerTeam=a,this.positionedOpponentTeam=s,this.activeCharacter=i}initTeams(e){const s=this.positionedPlayerTeam.map((e=>e.character));s.forEach((e=>e.levelUp()));const i=v([c,m,d],this.gameLevel,e-s.length),r=t(a([0,1]),e);this.positionedPlayerTeam=[...s,...i.characters].map(((e,t)=>new g(e,r[t])));const n=v([h,p,u],this.gameLevel,e),o=t(a([6,7]),e);this.positionedOpponentTeam=n.characters.map(((e,t)=>new g(e,o[t])))}get allCharacters(){return[...this.positionedPlayerTeam,...this.positionedOpponentTeam]}get allCharacterPositions(){return this.allCharacters.map((e=>e.position))}get currentGameState(){return this.allCharacters.map((e=>({character:e.character.type,health:e.character.health,attack:e.character.attack,position:e.position})))}checkWinOrLoose(){return new Promise(((e,t)=>{this.positionedPlayerTeam.length||t({gameOver:!0}),this.positionedOpponentTeam.length||t({nextLevel:!0}),this.passTheTurn(),e("game is going on!")}))}passTheTurn(){this.turn+=1,console.log("The turn is passed! ",this.turn)}calculateDamage(e,t=this.activeCharacter){return Math.floor(Math.max(t.character.attack-e.character.defence,.1*t.character.attack))}chooseOpponentTurn(){return new Promise(((e,t)=>{console.log("chooseOpponentTurn\nturn: ",this.turn),console.table(this.currentGameState),this.isPlayerTurn()&&t("It's a player turn now, evil team can't move!"),0===this.positionedOpponentTeam.length&&t("Evil team is empty!");let a=[];this.positionedOpponentTeam.forEach((e=>{a.push({attacker:e,currentIndex:e.position,target:this.positionedPlayerTeam.find((t=>e.character.attackDistance>=s(e.position,t.position)))})}));const r=a.reduce(((e,t)=>{if(!t.target)return e;const a=this.calculateDamage(t.target,t.attacker);return a>e.damage?(t.damage=a,t):e}),{damage:0});if(r.damage>0)console.log("Let's attack!"),e({move:!1,attack:!0,...r});else{console.log("Let's move!"),this.positionedOpponentTeam.sort(((e,t)=>t.character.attack-e.character.attack));const t=this.positionedOpponentTeam[0],a=this.positionedPlayerTeam.reduce(((e,a)=>{const i=s(t.position,a.position);return i<e.distance?{distance:i,target:a}:e}),{distance:1/0});e({attack:!1,move:!0,currentIndex:t.position,characterToMove:t,newIndex:i(t.position,a.target.position,t.character.move,this.allCharacterPositions)})}}))}isPlayerTurn(){return"player"===f.players[this.turn%2]}isOpponentCharacter(e){return this.positionedOpponentTeam.includes(e)}isActiveCharacter(){return null!==this.activeCharacter}setActiveCharacter(e){this.activeCharacter=e}unsetActiveCharacter(){this.activeCharacter=null}static from(e){return{gameLevel:e.gameLevel,turn:e.turn,positionedPlayerTeam:e.positionedPlayerTeam,positionedOpponentTeam:e.positionedOpponentTeam,activeCharacter:e.activeCharacter}}}const L="auto",S="pointer",w="crosshair",y="not-allowed",P=new r;P.bindToDOM(document.querySelector("#game-container"));const T=new class{constructor(e){this.storage=e}save(e){this.storage.setItem("retroGameSaved",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("retroGameSaved"))}catch(e){throw new Error("Invalid state")}}}(localStorage),E=new class{constructor(e,t){this.gamePlay=e,this.stateService=t,this.gameState=new f,this.gamePlay.addNewGameListener(this.onNewGameClick.bind(this)),this.gamePlay.addSaveGameListener(this.onSaveGameClick.bind(this)),this.gamePlay.addLoadGameListener(this.onLoadGameClick.bind(this)),this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addCellClickListener(this.onCellClick.bind(this))}init(){const e=Math.min(this.gameState.gameLevel+2,6);this.gamePlay.drawUi(n.setTheme(this.gameState.gameLevel)),this.gameState.initTeams(e),this.gamePlay.redrawPositions(this.gameState.allCharacters)}gameLevelUp(){r.showMessage("Уровень пройден!"),this.gameState.gameLevel+=1,this.gameState.turn=0,this.gameState.unsetActiveCharacter(),this.gamePlay.deselectAllCells(),this.init()}gameOver(){r.showError("Вы проиграли!"),this.gamePlay.cellClickListeners=[],this.gamePlay.cellEnterListeners=[],this.gamePlay.cellLeaveListeners=[]}onCellClick(e){if(console.log("onCellClick\nturn: ",this.gameState.turn),console.table(this.gameState.currentGameState),!this.gameState.isPlayerTurn())return void r.showError("Сейчас ход противника!");const t=this.gameState.allCharacters.find((t=>t.position===e));if(t)if(this.gameState.isActiveCharacter())if(this.gameState.isOpponentCharacter(t))if(this.gameState.activeCharacter.character.attackDistance>=s(this.gameState.activeCharacter.position,e)){const a=this.gameState.calculateDamage(t);this.gamePlay.showDamage(e,a).then((()=>this.causeDamage(t,a))).then((()=>this.redrawBoard())).then((()=>this.gameState.checkWinOrLoose())).then((()=>this.gameState.chooseOpponentTurn())).then((e=>this.selectOpponentCharacter(e))).then((e=>Promise.any([this.opponentMoves(e),this.opponentAttacks(e)]))).then((()=>this.gameState.checkWinOrLoose())).catch((e=>{console.log("caught result: ",e),e.gameOver&&setTimeout((()=>this.gameOver()),0),e.nextLevel&&setTimeout((()=>this.gameLevelUp()),0)}))}else r.showError("Дистанция атаки превышает возможности персонажа!");else this.gameState.activeCharacter!==t&&(this.gamePlay.deselectCell(this.gameState.activeCharacter.position),this.gamePlay.selectCell(e),this.gameState.setActiveCharacter(t));else this.gameState.isOpponentCharacter(t)?r.showError("Выберите персонажа из своей команды, который будет ходить!"):(this.gamePlay.selectCell(e),this.gameState.setActiveCharacter(t));else{if(!this.gameState.isActiveCharacter())return;this.gameState.activeCharacter.character.move>=s(this.gameState.activeCharacter.position,e)?(this.gamePlay.deselectCell(this.gameState.activeCharacter.position),this.gameState.activeCharacter.position=e,this.gamePlay.redrawPositions(this.gameState.allCharacters),this.gamePlay.selectCell(e),this.gameState.passTheTurn(),this.gameState.chooseOpponentTurn().then((e=>this.selectOpponentCharacter(e))).then((e=>Promise.any([this.opponentMoves(e),this.opponentAttacks(e)]))).then((()=>this.gameState.checkWinOrLoose())).catch((e=>{console.log("caught result: ",e),e.gameOver&&setTimeout((()=>this.gameOver()),0),e.nextLevel&&setTimeout((()=>this.gameLevelUp()),0)}))):r.showError("Персонаж не может переместиться так далеко!")}}redrawBoard(){this.gamePlay.redrawPositions(this.gameState.allCharacters)}selectOpponentCharacter(e){return new Promise((t=>{this.gamePlay.selectOpponentCell(e.currentIndex),setTimeout((()=>{this.gamePlay.deselectOpponentCell(e.currentIndex),t(e)}),1e3)}))}causeDamage(e,t){e.character.health-=t,e.character.health<=0&&(this.gamePlay.deselectCell(e.position),this.gameState.positionedOpponentTeam=this.gameState.positionedOpponentTeam.filter((t=>t!==e)),this.gameState.positionedPlayerTeam=this.gameState.positionedPlayerTeam.filter((t=>t!==e)),e===this.gameState.activeCharacter&&(this.gameState.unsetActiveCharacter(),this.gamePlay.deselectAllCells()))}opponentMoves(e){return new Promise(((t,a)=>{console.log("Inside opponentMoves: ",e),e.move?(e.characterToMove.position=e.newIndex,setTimeout((()=>{this.redrawBoard(),this.gamePlay.selectCell(e.newIndex,"purple"),setTimeout((()=>{this.gamePlay.deselectCell(e.newIndex),t("Move is finished")}),1e3)}),1e3)):a("Character mustn't move")}))}opponentAttacks(e){return new Promise(((t,a)=>{console.log("Inside opponentAttacks: ",e),e.attack?this.gamePlay.showDamage(e.target.position,e.damage).then((()=>this.causeDamage(e.target,e.damage))).then((()=>{this.redrawBoard(),t("Attack is finished")})).catch(console.error):a("Character mustn't attack")}))}onCellEnter(e){const t=this.gameState.allCharacters.find((t=>t.position===e));if(t)this.gamePlay.showCellTooltip(`🎖${(a=t.character).level} ⚔${a.attack} 🛡${a.defence} ❤${a.health}`,e),this.gameState.isActiveCharacter()?this.gameState.isOpponentCharacter(t)?this.gameState.activeCharacter.character.attackDistance>=s(this.gameState.activeCharacter.position,e)?(this.gamePlay.selectCell(e,"red"),this.gamePlay.setCursor(w)):this.gamePlay.setCursor(y):this.gameState.activeCharacter!==t&&this.gamePlay.setCursor(S):this.gameState.isOpponentCharacter(t)||this.gamePlay.setCursor(S);else{if(!this.gameState.isActiveCharacter())return;this.gameState.activeCharacter.character.move>=s(this.gameState.activeCharacter.position,e)?(this.gamePlay.selectCell(e,"green"),this.gamePlay.setCursor(S)):this.gamePlay.setCursor(y)}var a}onCellLeave(e){this.gameState.isActiveCharacter()&&e!==this.gameState.activeCharacter.position&&this.gamePlay.deselectCell(e),this.gamePlay.hideCellTooltip(e),this.gamePlay.setCursor(L)}onNewGameClick(){this.gameState=new f,this.init()}onSaveGameClick(){this.gameState.isPlayerTurn()?(this.stateService.save(f.from(this.gameState)),r.showMessage("The game saved")):r.showError("Дождитесь окончания хода противника, чтобы сохранить игру!")}onLoadGameClick(){try{const e=this.stateService.load();if(console.log(e),null===e)throw new Error("Нет сохранённых игр");this.gameState=new f(e.gameLevel,e.turn,C(e.positionedPlayerTeam),C(e.positionedOpponentTeam),e.activeCharacter),this.gamePlay.drawUi(n.setTheme(this.gameState.gameLevel)),this.gamePlay.redrawPositions(this.gameState.allCharacters),this.gameState.activeCharacter&&this.gamePlay.selectCell(this.gameState.activeCharacter.position)}catch(e){console.error(e),r.showError("Не удалось загрузить игру! Отсутствует или повреждён образ сохранённой игры.")}}}(P,T);E.init()})();